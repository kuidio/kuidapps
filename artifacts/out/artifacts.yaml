---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkconfigs.network.app.kuid.dev
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
spec:
  group: network.app.kuid.dev
  names:
    categories:
    - kuid
    - net
    kind: NetworkConfig
    listKind: NetworkConfigList
    plural: networkconfigs
    singular: networkconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkConfig is the NetworkConfig for the NetworkConfig API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkConfigSpec defines the desired state of NetworkConfig
            properties:
              addressing:
                description: Addressing defines the addressing used in this network
                enum:
                - dualstack
                - ipv4only
                - ipv6only
                type: string
              prefixes:
                description: |-
                  Prefixes defines the prefixes belonging to this network config
                  prefixLength would be indicated by a label
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels as user defined labels
                      type: object
                    prefix:
                      description: Prefix defines the ip cidr in prefix notation.
                      pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))|((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))
                      type: string
                  required:
                  - prefix
                  type: object
                type: array
              protocols:
                description: Protocols define the network wide protocol parameters
                properties:
                  ebgp:
                    properties:
                      asPool:
                        type: string
                    type: object
                  evpn:
                    type: object
                  ibgp:
                    properties:
                      as:
                        format: int32
                        type: integer
                      localAS:
                        type: boolean
                      routeReflectors:
                        items:
                          type: string
                        type: array
                    type: object
                  ipvpn:
                    type: object
                  isis:
                    type: object
                  ospf:
                    type: object
                type: object
              topology:
                type: string
              vlanTagging:
                description: VLANTagging defines if VLAN tagging should be used or not
                type: boolean
            required:
            - topology
            type: object
          status:
            description: NetworkConfigStatus defines the observed state of NetworkConfig
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networks.network.app.kuid.dev
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
spec:
  group: network.app.kuid.dev
  names:
    categories:
    - kuid
    - net
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Network is the Network for the Network API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkSpec defines the desired state of Network
            properties:
              bridgeDomains:
                description: |-
                  BridgeDomains define a set of logical ports that share the same
                  flooding or broadcast characteristics. Like a virtual LAN (VLAN),
                  a bridge domain spans one or more ports of multiple devices.
                items:
                  properties:
                    interfaces:
                      description: Interfaces defines the interfaces belonging to the bridge domain
                      items:
                        description: |-
                          Network defines the interface parameters
                          An interface can be attached to a routingTable and a bridgeDomain.
                          Dynamic or static assignments are possible
                        properties:
                          bridgeDomain:
                            description: |-
                              BridgeDomain defines the name of the bridgeDomain belonging to the interface
                              A BridgeDomain can only be attached to a routingTable and is mutualy exclusive with a
                              defines interface Identifier
                            type: string
                          endpoint:
                            description: Endpoint defines the name of the endpoint
                            type: string
                          ips:
                            description: IPs define the list of IP addresses on the interface
                            items:
                              type: string
                            type: array
                          node:
                            description: Node defines the node the resource belongs to.
                            type: string
                          protocols:
                            description: Protocols define the protocols parameters for this interface
                            properties:
                              bgp:
                                properties:
                                  localAS:
                                    format: int32
                                    type: integer
                                  peerAS:
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          region:
                            description: Region defines the region this sites belongs to
                            type: string
                          selector:
                            description: Selector defines the selector criterias for the interface selection
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          site:
                            description: Site defines the site in which the node is deployed
                            type: string
                          vlanID:
                            description: VLANID defines the VLAN ID on the interface
                            type: integer
                          vlanTagging:
                            description: VLANTagging defines if the interface is vlanTagged or not
                            type: boolean
                        required:
                        - endpoint
                        - node
                        - region
                        - site
                        type: object
                      type: array
                    name:
                      description: Name defines the name of the bridge domain
                      type: string
                    networkID:
                      description: NetworkID defines the id of the bridge domain
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              routingTables:
                description: |-
                  RoutingTables defines a set of routes belonging to a given routing instance
                  Multiple routing tables are also called virtual routing instances. Each virtual
                  routing instance can hold overlapping IP information
                  A routing table supports both ipv4 and ipv6
                items:
                  properties:
                    interfaces:
                      description: Interfaces defines the interfaces belonging to the routing table
                      items:
                        description: |-
                          Network defines the interface parameters
                          An interface can be attached to a routingTable and a bridgeDomain.
                          Dynamic or static assignments are possible
                        properties:
                          bridgeDomain:
                            description: |-
                              BridgeDomain defines the name of the bridgeDomain belonging to the interface
                              A BridgeDomain can only be attached to a routingTable and is mutualy exclusive with a
                              defines interface Identifier
                            type: string
                          endpoint:
                            description: Endpoint defines the name of the endpoint
                            type: string
                          ips:
                            description: IPs define the list of IP addresses on the interface
                            items:
                              type: string
                            type: array
                          node:
                            description: Node defines the node the resource belongs to.
                            type: string
                          protocols:
                            description: Protocols define the protocols parameters for this interface
                            properties:
                              bgp:
                                properties:
                                  localAS:
                                    format: int32
                                    type: integer
                                  peerAS:
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          region:
                            description: Region defines the region this sites belongs to
                            type: string
                          selector:
                            description: Selector defines the selector criterias for the interface selection
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          site:
                            description: Site defines the site in which the node is deployed
                            type: string
                          vlanID:
                            description: VLANID defines the VLAN ID on the interface
                            type: integer
                          vlanTagging:
                            description: VLANTagging defines if the interface is vlanTagged or not
                            type: boolean
                        required:
                        - endpoint
                        - node
                        - region
                        - site
                        type: object
                      type: array
                    name:
                      description: Name defines the name of the routing table
                      type: string
                    networkID:
                      description: NetworkID defines the id of the bridge domain
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              topology:
                type: string
            required:
            - topology
            type: object
          status:
            description: NetworkStatus defines the observed state of Network
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: topologies.topo.app.kuid.dev
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
spec:
  group: topo.app.kuid.dev
  names:
    categories:
    - kuid
    - topo
    kind: Topology
    listKind: TopologyList
    plural: topologies
    singular: topology
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Topology is the Topology for the Topology API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopologySpec defines the desired state of Topology
            properties:
              containerLab:
                description: ContainerLab holds the containerlab topology
                type: string
              location:
                description: Location identifies the default location this topology is located in
                properties:
                  latitude:
                    type: string
                  longitude:
                    type: string
                required:
                - latitude
                - longitude
                type: object
              region:
                description: Region identifies the default region this topology is located in
                type: string
              site:
                description: Site identifies the default site this topology is located in
                type: string
            type: object
          status:
            description: TopologyStatus defines the observed state of Topology
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuidapps
  namespace: kuid-system
  labels:
    app.kubernetes.io/name: kuidapps
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuidapps
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kuidapps
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      serviceAccountName: kuidapps
      containers:
      - name: kuidapps
        image: europe-docker.pkg.dev/srlinux/eu.gcr.io/kuidapps:latest
        imagePullPolicy: Always
        command:
        - /app/kuidapps
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: "NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: "NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_TOPOLOGY
          value: "true"
        - name: ENABLE_LINK
          value: "true"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole
rules:
- apiGroups: [""]
  resources: [events, configmaps]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [topo.app.kuid.dev]
  resources: [topologies, topologies/status]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [infra.be.kuid.dev]
  resources: [nodes, nodes/status]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [infra.be.kuid.dev]
  resources: [links, links/status]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [infra.be.kuid.dev]
  resources: [endpoints, endpoints/status]
  verbs: [get, watch, list, create, update, patch, delete]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuidapps-clusterrole
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role
  namespace: kuid-system
rules:
- apiGroups: [""]
  resources: [configmaps]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [""]
  resources: [events]
  verbs: [create, patch]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role-binding
  namespace: kuid-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuidapps-leader-election-role
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps
  namespace: kuid-system

