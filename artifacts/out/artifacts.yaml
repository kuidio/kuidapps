---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: topologies.topo.app.kuid.dev
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
spec:
  group: topo.app.kuid.dev
  names:
    categories:
    - kuid
    - topo
    kind: Topology
    listKind: TopologyList
    plural: topologies
    singular: topology
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Topology is the Topology for the Topology API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopologySpec defines the desired state of Topology
            properties:
              containerLab:
                description: ContainerLab holds the containerlab topology
                type: string
              location:
                description: Location identifies the default location this topology is located in
                properties:
                  latitude:
                    type: string
                  longitude:
                    type: string
                required:
                - latitude
                - longitude
                type: object
              region:
                description: Region identifies the default region this topology is located in
                type: string
              site:
                description: Site identifies the default site this topology is located in
                type: string
            type: object
          status:
            description: TopologyStatus defines the observed state of Topology
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuidapps
  namespace: kuid-system
  labels:
    app.kubernetes.io/name: kuidapps
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuidapps
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kuidapps
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      serviceAccountName: kuidapps
      containers:
      - name: kuidapps
        image: europe-docker.pkg.dev/srlinux/eu.gcr.io/kuidapps:latest
        imagePullPolicy: Always
        command:
        - /app/kuidapps
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: "NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: "NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_TOPOLOGY
          value: "true"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole
rules:
- apiGroups: [""]
  resources: [events, configmaps]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [topo.app.kuid.dev]
  resources: [topologies, topologies/status]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [infra.be.kuid.dev]
  resources: [nodes, nodes/status]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [infra.be.kuid.dev]
  resources: [links, links/status]
  verbs: [get, watch, list, create, update, patch, delete]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuidapps-clusterrole
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role
  namespace: kuid-system
rules:
- apiGroups: [""]
  resources: [configmaps]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [coordination.k8s.io]
  resources: [leases]
  verbs: [get, watch, list, create, update, patch, delete]
- apiGroups: [""]
  resources: [events]
  verbs: [create, patch]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role-binding
  namespace: kuid-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuidapps-leader-election-role
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps
  namespace: kuid-system

